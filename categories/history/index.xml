<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>history on Theoretically Josh</title><link>https://theoreticallyjosh.com/categories/history/</link><description>Recent content in history on Theoretically Josh</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>jlhags+blog@gmail.com (Joshua Hagofsky)</managingEditor><webMaster>jlhags+blog@gmail.com (Joshua Hagofsky)</webMaster><lastBuildDate>Fri, 11 Nov 2022 12:29:33 -0700</lastBuildDate><atom:link href="https://theoreticallyjosh.com/categories/history/index.xml" rel="self" type="application/rss+xml"/><item><title>Why Do Arrays Start at Zero?</title><link>https://theoreticallyjosh.com/post/why-do-arrays-start-at-zero/</link><pubDate>Fri, 11 Nov 2022 12:29:33 -0700</pubDate><author>jlhags+blog@gmail.com (Joshua Hagofsky)</author><guid>https://theoreticallyjosh.com/post/why-do-arrays-start-at-zero/</guid><description>A common point of confusion for new programmers arises when trying to access a item in an array/list/slice/string etc. The &amp;ldquo;first&amp;rdquo; item is not located in position 1, but rather it is in position 0, or so it seems. The reason for this is all thanks to the programming language C. But why is C like that? For this we need to understand pointers. A pointer is a variable that stores a memory location holding a value.</description></item></channel></rss>